"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var i in t)Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}(exports,{PlaywrightChromeProfile:function(){return g},copyProfileData:function(){return u},getPlaywrightChromeProfileByEmail:function(){return h}});const e=require("playwright"),t=require("jnu-abc"),i=/*#__PURE__*/l(require("fs")),r=/*#__PURE__*/l(require("path")),o=require("child_process"),a=/*#__PURE__*/l(require("os"));function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function s(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,i=new WeakMap;return(s=function(e){return e?i:t})(e)}function l(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var i=s(t);if(i&&i.has(e))return i.get(e);var r={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&Object.prototype.hasOwnProperty.call(e,a)){var n=o?Object.getOwnPropertyDescriptor(e,a):null;n&&(n.get||n.set)?Object.defineProperty(r,a,n):r[a]=e[a]}return r.default=e,i&&i.set(e,r),r}const c=e=>{let t=[];try{for(let o of i.readdirSync(e))if(o.startsWith("Profile")){let a=r.join(e,o);try{i.statSync(a).isDirectory()&&t.push(a.replace(/\\/g,"/"))}catch(e){continue}}}catch(t){console.warn(`Error reading directory ${e}: ${t.message}`)}return t},h=(e="",i="")=>{if(i||(i=process.env.CHROMIUM_USERDATA_PATH||"/root/.config/google-chrome"),!e)return"Default";try{let r=c(i),o=[];for(let i of r)try{let r=(0,t.loadJson)(`${i}/Preferences`);if(r.account_info&&r.account_info.length>0){for(let t=0;t<r.account_info.length;t++)if(r.account_info[t].email===e){o.push({folder:i.replace(/\\/g,"/").split("/").pop()||"",isPrimary:0===t});break}}}catch(e){continue}let a=o.find(e=>e.isPrimary);if(a)return console.log(`✅ 주계정으로 등록된 프로필 발견: ${a.folder}`),a.folder;if(o.length>0)return console.log(`⚠️ 보조계정으로만 등록됨. 첫 번째 프로필 사용: ${o[0].folder}`),o[0].folder}catch(e){console.warn(`Error finding Chrome profiles: ${e.message}`)}return null},u=(e,t,o)=>{console.log("📋 프로필 데이터를 복사합니다...");let a=r.join(o,e);i.existsSync(t)||i.mkdirSync(t,{recursive:!0});let n=0;for(let e of["Cookies","Login Data","Preferences","Secure Preferences","Web Data","History","Bookmarks"]){let o=r.join(a,e),s=r.join(t,e);if(i.existsSync(o))try{i.copyFileSync(o,s),n++,console.log(`   ✅ ${e} 복사됨`)}catch(t){console.log(`   ⚠️  ${e} 복사 실패: ${t.message}`)}}for(let e of["Local Storage","Session Storage","IndexedDB","databases"]){let o=r.join(a,e),s=r.join(t,e);if(i.existsSync(o))try{i.cpSync(o,s,{recursive:!0,force:!0}),n++,console.log(`   ✅ ${e}/ 복사됨`)}catch(t){console.log(`   ⚠️  ${e}/ 복사 실패: ${t.message}`)}}return console.log(`   📊 총 ${n}개 항목이 복사되었습니다.`),n>0};class g{async ensureInitialized(){await this.initPromise}async initializeBrowser(t){console.log("🎭 Playwright persistent context 방식으로 Chrome 실행 (CDP 없음)");let n=t.profileName??h(t.email,t.userDataDir)??null;if(!n)throw Error(`Profile not found for email: ${t.email}`);try{(0,o.execSync)('pkill -TERM -f "Google Chrome"',{stdio:"ignore"}),console.log("🔄 기존 Chrome 프로세스 종료"),await new Promise(e=>setTimeout(e,2e3))}catch(e){}let s=t.userDataDir||process.env.CHROMIUM_USERDATA_PATH||"/Users/youchan/Library/Application Support/Google/Chrome",l=r.join(s,n);if(!i.existsSync(l))throw Error(`Chrome 프로필을 찾을 수 없습니다: ${l}`);console.log(`📁 원본 Chrome 프로필: ${l}`);let c="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome";if(!i.existsSync(c))throw Error(`Chrome 실행 파일을 찾을 수 없습니다: ${c}`);console.log(`🔧 Chrome 실행 파일: ${c}`);let g=s,f=n;if(t.useTempProfile){let e=new Date().toISOString().replace(/[:.]/g,"-");this.tempUserDataDir=r.join(a.tmpdir(),`chrome-profile-${e}`);let t=r.join(this.tempUserDataDir,"Default");console.log(`🔧 임시 프로필 디렉토리: ${this.tempUserDataDir}`),u(n,t,s)||console.log("⚠️  프로필 데이터 복사에 실패했습니다. 빈 프로필로 진행합니다."),g=this.tempUserDataDir,f="Default"}console.log(`🔧 사용할 프로필 경로: ${r.join(g,f)}`),this.context=await e.chromium.launchPersistentContext(g,{headless:t.headless??!1,executablePath:c,args:[`--profile-directory=${f}`,"--no-first-run","--disable-default-apps","--disable-sync","--disable-extensions","--disable-background-networking","--disable-background-timer-throttling","--disable-renderer-backgrounding","--disable-backgrounding-occluded-windows","--disable-features=TranslateUI,VizDisplayCompositor","--no-sandbox","--disable-dev-shm-usage","--start-maximized",...t.arguments||[]]}),this.browser=this.context.browser();let d=this.context.pages();d.length>0?this.page=d[0]:this.page=await this.context.newPage(),console.log("✅ Playwright persistent context 연결 완료 (CDP 없음)")}async getFullSize(){await this.ensureInitialized();let e=0,t=0;for(;;){let{viewportHeight:i,documentHeight:r,scrollY:o}=await this.page.evaluate(()=>{let e=globalThis,t=e.document;return{viewportHeight:e.innerHeight,documentHeight:Math.max(t.documentElement.scrollHeight,t.body.scrollHeight,t.documentElement.offsetHeight,t.body.offsetHeight),scrollY:e.scrollY||e.pageYOffset}});if(r===e){if(++t>=3)break}else t=0,e=r;let a=Math.min(o+800,r-i);if(o>=r-i)break;await this.page.evaluate(e=>{globalThis.scrollTo(0,e)},a),await this.page.waitForTimeout(2e3);try{await this.page.waitForFunction(e=>{let t=globalThis.document;return Math.max(t.documentElement.scrollHeight,t.body.scrollHeight,t.documentElement.offsetHeight,t.body.offsetHeight)>=e},r,{timeout:3e3})}catch(e){}}return await this.page.evaluate(()=>{let e=globalThis.document;return{width:Math.max(e.documentElement.scrollWidth,e.body.scrollWidth,e.documentElement.offsetWidth,e.body.offsetWidth),height:Math.max(e.documentElement.scrollHeight,e.body.scrollHeight,e.documentElement.offsetHeight,e.body.offsetHeight)}})}async _getFullScreenshot(){try{let{width:e,height:t}=await this.getFullSize();return await this.page.setViewportSize({width:e,height:t}),await this.page.screenshot({fullPage:!0,type:"png"})}catch(e){throw console.error("스크린샷 촬영 중 오류 발생:",e),e}}async getFullScreenshot(){try{return(await this._getFullScreenshot()).toString("base64")}finally{await this.close()}}async saveScreenshot(e){try{let i=await this._getFullScreenshot();(0,t.saveFile)(e,i.toString("base64"),{encoding:"base64"})}finally{await this.close()}}async goto(e){await this.ensureInitialized(),await this.page.goto(e,{waitUntil:"domcontentloaded"})}async wait(e,t={}){await this.ensureInitialized();let{timeout:i=1e4,state:r="attached"}=t;return this.page.waitForSelector(e,{timeout:i,state:r})}async findElements(e){return await this.ensureInitialized(),this.page.locator(e)}async findElement(e){return await this.ensureInitialized(),this.page.locator(e).first()}async getPageSource(){return await this.ensureInitialized(),await this.page.content()}async getElementHtml(e){let t=await this.findElement(e);return await t.innerHTML()}async click(e){let i=await this.findElement(e);await i.scrollIntoViewIfNeeded(),await (0,t.sleepAsync)(1e3),await i.click()}async getText(e){let t=await this.findElement(e);return await t.textContent()}async getAttribute(e,t){let i=await this.findElement(e);return await i.getAttribute(t)}async sendKeys(e,t){let i=await this.findElement(e);await i.fill(t)}async saveElementScreenshot(e,i){let r=await this.findElement(e),o=await r.screenshot({type:"png"});(0,t.saveFile)(i,o.toString("base64"),{encoding:"base64"})}async executeScript(e,...t){return await this.ensureInitialized(),this.page.evaluate(e,...t)}async scrollIntoView(e){let t=await this.findElement(e);await t.scrollIntoViewIfNeeded()}async close(){if(await this.ensureInitialized(),this.context&&(await this.context.close(),console.log("✅ Playwright persistent context 종료")),this.tempUserDataDir&&i.existsSync(this.tempUserDataDir))try{i.rmSync(this.tempUserDataDir,{recursive:!0,force:!0}),console.log(`🗑️  임시 프로필 디렉토리 정리됨: ${this.tempUserDataDir}`)}catch(e){console.log(`⚠️  임시 디렉토리 정리 실패: ${e.message}`)}}constructor(e={headless:!1,profileName:"",email:"",userDataDir:"",arguments:[],useTempProfile:!1}){n(this,"browser",void 0),n(this,"context",void 0),n(this,"page",void 0),n(this,"initPromise",void 0),n(this,"tempUserDataDir",void 0),this.initPromise=this.initializeBrowser(e)}}
function e(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}import{Builder as t,By as i}from"selenium-webdriver";import n from"selenium-webdriver/chrome.js";import{loadJson as r,saveFile as a,sleepAsync as s}from"jnu-abc";import{until as o}from"selenium-webdriver";import*as l from"fs";import*as c from"path";import*as d from"os";process.env.CHROMIUM_EXECUTABLE_PATH;let u=e=>{let t=[];try{for(let i of l.readdirSync(e))if(i.startsWith("Profile")){let n=c.join(e,i);try{l.statSync(n).isDirectory()&&t.push(n.replace(/\\/g,"/"))}catch(e){continue}}}catch(t){console.warn(`Error reading directory ${e}: ${t.message}`)}return t},m=(e="",t="")=>{if(t||(t=process.env.CHROMIUM_USERDATA_PATH||"/root/.config/google-chrome",console.log(`🔧 프로필 찾기 - 사용할 userDataDir: ${t}`),console.log(`🔧 환경변수 CHROMIUM_USERDATA_PATH: ${process.env.CHROMIUM_USERDATA_PATH}`)),!e)return null;try{let i=u(t),n=[];for(let t of i)try{let i=r(`${t}/Preferences`);if(i.account_info&&i.account_info.length>0){for(let r=0;r<i.account_info.length;r++)if(i.account_info[r].email===e){n.push({folder:t.replace(/\\/g,"/").split("/").pop()||"",isPrimary:0===r});break}}}catch(e){continue}let a=n.find(e=>e.isPrimary);if(a)return console.log(`✅ 주계정으로 등록된 프로필 발견: ${a.folder}`),a.folder;if(n.length>0)return console.log(`⚠️ 보조계정으로만 등록됨. 첫 번째 프로필 사용: ${n[0].folder}`),n[0].folder}catch(e){console.warn(`Error finding Chrome profiles: ${e.message}`)}return null},f=e=>{try{let t=d.tmpdir(),i=c.join(t,e);if(l.existsSync(i)){let e=c.join(i,"Default");if(l.existsSync(e))return console.log(`🔍 기존 임시 프로필 발견: ${i}`),i}return null}catch(e){return console.log(`⚠️  기존 임시 프로필 검색 실패: ${e.message}`),null}},h=(e,t,i)=>{console.log("📋 프로필 데이터를 복사합니다...");let n=c.join(i,e);l.existsSync(t)||l.mkdirSync(t,{recursive:!0});let r=0;for(let e of["Cookies","Login Data","Preferences","Secure Preferences","Web Data","History","Bookmarks","Google Profile.ico","First Run","Local State","Network Action Predictor","Network Persistent State","Sync Data","TransportSecurity","Visited Links","Token Service","Account Manager","Login Data For Account","Network","Profile Avatar","Client Side Phishing Model","Safe Browsing","Session","Shortcuts","Top Sites","Trusted Vault","User Data"]){let i=c.join(n,e),a=c.join(t,e);if(l.existsSync(i))try{l.copyFileSync(i,a),r++,console.log(`   ✅ ${e} 복사됨`)}catch(t){console.log(`   ⚠️  ${e} 복사 실패: ${t.message}`)}}for(let e of["Local Storage","Session Storage","IndexedDB","databases","Sync Data","blob_storage","File System","Platform Notifications"]){let i=c.join(n,e),a=c.join(t,e);if(l.existsSync(i))try{l.cpSync(i,a,{recursive:!0,force:!0}),r++,console.log(`   ✅ ${e}/ 복사됨`)}catch(t){console.log(`   ⚠️  ${e}/ 복사 실패: ${t.message}`)}}return console.log(`   📊 총 ${r}개 항목이 복사되었습니다.`),r>0};class g{async ensureInitialized(){await this.initPromise}async initializeDriver(e){console.log("🔧 Selenium Chrome Profile 초기화 중...");let i=new n.Options,r=process.env.CHROMIUM_EXECUTABLE_PATH||("win32"===process.platform?"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe":"darwin"===process.platform?"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome":"/usr/bin/google-chrome");if(!l.existsSync(r))throw Error(`Chrome 실행 파일을 찾을 수 없습니다: ${r}`);i.setChromeBinaryPath(r),console.log(`🔧 Chrome 실행 파일: ${r}`),e.headless&&i.addArguments("--headless=new");let a=e.profileName??m(e.email,e.userDataDir)??null,s=process.env.DOCKER_CONTAINER||process.env.CI||l.existsSync("/.dockerenv")||process.getuid?.()===0,o="true"===process.env.FORCE_CHROME_PROFILE;if(a&&"null"!==a&&"undefined"!==a){let t=e.userDataDir||process.env.CHROMIUM_USERDATA_PATH||("win32"===process.platform?"C:\\Users\\"+d.userInfo().username+"\\AppData\\Local\\Google\\Chrome\\User Data":"darwin"===process.platform?"/Users/"+d.userInfo().username+"/Library/Application Support/Google/Chrome":"/home/"+d.userInfo().username+"/.config/google-chrome"),n=t,r=a;if(e.useTempProfile){let e=a.replace(/\s/g,"_").replace(/[/\\]/g,"_"),i=`chrome-selenium-${e}`,s=f(i);if(s)console.log(`♻️  기존 임시 프로필을 재사용합니다: ${s}`),this.tempUserDataDir=s,n=this.tempUserDataDir,r="Default";else{this.tempUserDataDir=c.join(d.tmpdir(),i);let e=c.join(this.tempUserDataDir,"Default");console.log(`🆕 새 임시 프로필을 생성합니다: ${this.tempUserDataDir}`),h(a,e,t)||console.log("⚠️  프로필 데이터 복사에 실패했습니다. 빈 프로필로 진행합니다."),n=this.tempUserDataDir,r="Default"}}if(!s||o||e.useTempProfile)i.addArguments(`--user-data-dir=${n}`),i.addArguments(`--profile-directory=${r}`),console.log(`📁 Chrome 프로필 설정: ${n}/${r}`),s&&o&&console.log("✅ Profile settings forced in container environment");else{console.warn("Profile settings skipped in container environment for stability (set FORCE_CHROME_PROFILE=true to override)");let e=`/tmp/chrome-selenium-${Date.now()}`;i.addArguments(`--user-data-dir=${e}`),console.log(`📁 임시 Chrome 프로필 사용 (컨테이너 환경): ${e}`)}}else{let e=`/tmp/chrome-selenium-${Date.now()}`;i.addArguments(`--user-data-dir=${e}`),console.log(`📁 임시 Chrome 프로필 사용: ${e}`),console.warn("⚠️ 프로필을 찾을 수 없어 임시 프로필을 생성합니다.")}let u=[];a&&"null"!==a&&"undefined"!==a?(u=["--no-first-run","--disable-default-apps","--start-maximized","--window-size=1920,1080","--disable-popup-blocking","--disable-notifications","--ignore-certificate-errors","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-renderer-backgrounding","--disable-features=TranslateUI","--disable-ipc-flooding-protection","--font-render-hinting=none","--enable-font-antialiasing","--force-device-scale-factor=1","--lang=ko-KR","--accept-lang=ko-KR,ko,en-US,en","--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"],console.log("🔧 실제 프로필 사용 - 안정성 중심 옵션 적용")):(u=["--disable-gpu","--no-sandbox","--disable-dev-shm-usage","--disable-blink-features=AutomationControlled","--disable-extensions","--start-maximized","--window-size=1920,1080","--disable-web-security","--allow-running-insecure-content","--disable-popup-blocking","--disable-notifications","--disable-infobars","--ignore-certificate-errors","--disable-setuid-sandbox","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-renderer-backgrounding","--disable-features=TranslateUI,VizDisplayCompositor","--disable-ipc-flooding-protection","--disable-default-apps","--remote-debugging-port=0","--font-render-hinting=none","--enable-font-antialiasing","--force-device-scale-factor=1","--lang=ko-KR","--accept-lang=ko-KR,ko,en-US,en","--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36","--enable-automation","--no-default-browser-check","--disable-background-networking","--disable-extensions-file-access-check","--disable-component-extensions-with-background-pages"],console.log("🔧 임시 프로필 사용 - 자동화 우회 옵션 적용")),[...u,...e.arguments||[]].forEach(e=>i.addArguments(e)),i.excludeSwitches("enable-automation"),i.excludeSwitches("enable-logging"),i.setUserPreferences({credentials_enable_service:!1,"profile.password_manager_enabled":!1,useAutomationExtension:!1,excludeSwitches:["enable-automation"],"profile.default_content_setting_values.notifications":2,"profile.managed_default_content_settings.images":1,"profile.default_content_settings.popups":0,"webkit.webprefs.fonts.standard.Hang":"Noto Sans CJK KR","webkit.webprefs.fonts.serif.Hang":"Noto Serif CJK KR","webkit.webprefs.fonts.sansserif.Hang":"Noto Sans CJK KR","webkit.webprefs.fonts.fixed.Hang":"NanumGothicCoding","webkit.webprefs.fonts.cursive.Hang":"Noto Sans CJK KR","webkit.webprefs.fonts.fantasy.Hang":"Noto Sans CJK KR"}),this.driver=await new t().forBrowser("chrome").setChromeOptions(i).build(),this.driver.executeScript(`
      // navigator.webdriver 속성 제거
      Object.defineProperty(navigator, 'webdriver', {
        get: () => undefined
      });

      // Chrome 자동화 관련 속성 제거
      delete window.cdc_adoQpoasnfa76pfcZLmcfl_Array;
      delete window.cdc_adoQpoasnfa76pfcZLmcfl_Promise;
      delete window.cdc_adoQpoasnfa76pfcZLmcfl_Symbol;
    `)}async getFullSize(){await this.ensureInitialized();let e=0,t=0;for(;;){let{viewportHeight:i,documentHeight:n,scrollY:r}=await this.driver.executeScript(`
        return {
          viewportHeight: window.innerHeight,
          documentHeight: Math.max(
            document.documentElement.scrollHeight,
            document.body.scrollHeight,
            document.documentElement.offsetHeight,
            document.body.offsetHeight
          ),
          scrollY: window.scrollY || window.pageYOffset
        }
      `);if(n===e){if(++t>=3)break}else t=0,e=n;let a=Math.min(r+800,n-i);if(r>=n-i)break;await this.driver.executeScript(`window.scrollTo(0, ${a})`),await this.driver.sleep(2e3),await this.driver.wait(async()=>await this.driver.executeScript(`
          return Math.max(
            document.documentElement.scrollHeight,
            document.body.scrollHeight,
            document.documentElement.offsetHeight,
            document.body.offsetHeight
          )
        `)>=n,3e3).catch(()=>{})}return await this.driver.executeScript(`
      return {
        width: Math.max(
          document.documentElement.scrollWidth,
          document.body.scrollWidth,
          document.documentElement.offsetWidth,
          document.body.offsetWidth
        ),
        height: Math.max(
          document.documentElement.scrollHeight,
          document.body.scrollHeight,
          document.documentElement.offsetHeight,
          document.body.offsetHeight
        )
      }
    `)}async _getFullScreenshot(){try{let{width:e,height:t}=await this.getFullSize();return await this.driver.manage().window().setRect({width:e,height:t}),await this.driver.takeScreenshot()}catch(e){throw console.error("스크린샷 촬영 중 오류 발생:",e),e}}async getFullScreenshot(){try{return await this._getFullScreenshot()}finally{this.close()}}async saveScreenshot(e){try{let t=await this._getFullScreenshot();a(e,t,{encoding:"base64"})}finally{this.close()}}async goto(e){await this.ensureInitialized(),await this.driver.get(e)}async wait(e,t={}){await this.ensureInitialized();let{timeout:n=1e4,until:r="located"}=t;switch(r){case"clickable":return this.driver.wait(o.elementIsEnabled(await this.findElement(e)),n);case"visible":return this.driver.wait(o.elementIsVisible(await this.findElement(e)),n);case"invisible":return this.driver.wait(o.elementIsNotVisible(await this.findElement(e)),n);case"staleness":return this.driver.wait(o.stalenessOf(await this.findElement(e)),n);default:return this.driver.wait(o.elementLocated(i.css(e)),n)}}async _findElements(e,t){switch(e.toLowerCase()){case"id":return await this.driver.findElements(i.id(t));case"name":return await this.driver.findElements(i.name(t));case"css":return await this.driver.findElements(i.css(t));case"xpath":return await this.driver.findElements(i.xpath(t));default:throw Error(`지원하지 않는 선택자 타입: ${e}`)}}async findElements(e){return await this.ensureInitialized(),await this.driver.findElements(i.css(e))}async _findElement(e,t){switch(e.toLowerCase()){case"id":return await this.driver.findElement(i.id(t));case"name":return await this.driver.findElement(i.name(t));case"css":return await this.driver.findElement(i.css(t));case"xpath":return await this.driver.findElement(i.xpath(t));default:throw Error(`지원하지 않는 선택자 타입: ${e}`)}}async findElement(e){return await this.ensureInitialized(),await this.driver.findElement(i.css(e))}async getPageSource(){return await this.ensureInitialized(),await this.driver.getPageSource()}async _getElementHtml(e,t){let i=await this._findElement(e,t);return await i.getAttribute("outerHTML")}async getElementHtml(e){return await (await this.findElement(e)).getAttribute("outerHTML")}async _click(e,t){let i=await this._findElement(e,t);await i.click()}async click(e){let t=await this.findElement(e);await this.scrollIntoView(t),await s(1e3),await t.click()}async _getText(e,t){let i=await this._findElement(e,t);return await i.getText()}async getText(e){let t=await this.findElement(e);return await t.getText()}async _getAttribute(e,t,i){let n=await this._findElement(e,t);return await n.getAttribute(i)}async getAttribute(e,t){let i=await this.findElement(e);return await i.getAttribute(t)}async _sendKeys(e,t,i){let n=await this._findElement(e,t);await n.sendKeys(i)}async sendKeys(e,t){let i=await this.findElement(e);await i.sendKeys(t)}async _saveElementScreenshot(e,t,i){let n=await this._findElement(e,t);a(i,await n.takeScreenshot(),{encoding:"base64"})}async saveElementScreenshot(e,t){let i=await this.findElement(e);a(t,await i.takeScreenshot(),{encoding:"base64"})}async executeScript(e,...t){return await this.ensureInitialized(),this.driver.executeScript(e,...t)}async scrollIntoView(e){await this.executeScript("arguments[0].scrollIntoView(true);",e)}async close(){await this.ensureInitialized(),this.driver&&await this.driver.quit(),this.tempUserDataDir&&l.existsSync(this.tempUserDataDir)&&(console.log(`💾 로그인 상태 유지를 위해 임시 프로필을 보존합니다: ${this.tempUserDataDir}`),console.log("   다음 실행 시 이 프로필이 재사용됩니다."))}constructor(t={headless:!1,profileName:"",email:"",userDataDir:"",arguments:[],useTempProfile:!1}){e(this,"driver",void 0),e(this,"initPromise",void 0),e(this,"tempUserDataDir",void 0),this.initPromise=this.initializeDriver(t)}}export{g as SeleniumChromeProfile,m as getSeleniumChromeProfileByEmail,h as copyProfileData,f as findExistingTempProfile};